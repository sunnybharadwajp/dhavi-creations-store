generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Product {
   id              Int      @id @default(autoincrement())
   name            String
   description     String?
   category        Category @relation(fields: [categoryId], references: [id])
   categoryId      Int
   price           Float
   stock           Int
   images          Image[]
   coverImageIndex Int
   sku             String   @unique
   createdAt       DateTime @default(now())
   updatedAt       DateTime @updatedAt
   orderItems      OrderItem[]
}

model Image {
   id        Int      @id @default(autoincrement())
   url       String
   product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
   productId Int
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
}

model Category {
   id          Int       @id @default(autoincrement())
   name        String
   description String?
   products    Product[]
   createdAt   DateTime  @default(now())
   updatedAt   DateTime  @updatedAt
}

model Customer {
   id         Int      @id @default(autoincrement())
   name       String
   email      String   @unique
   phone      String?
   address    String?
   city       String?
   postalCode String?
   country    String?
   orders     Order[]
   createdAt  DateTime @default(now())
   updatedAt  DateTime @updatedAt
}

model User {
   id            Int       @id @default(autoincrement())
   username      String    @unique
   password_hash String
   sessions      Session[]
   role          String
   createdAt     DateTime  @default(now())
   updatedAt     DateTime  @updatedAt
}

model Session {
   id        Int      @id @default(autoincrement())
   user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
   userId    Int
   expiresAt DateTime
}

model Order {
   id         Int         @id @default(autoincrement())
   customer   Customer    @relation(fields: [customerId], references: [id])
   customerId Int
   orderItems OrderItem[]
   totalPrice Float
   status     String
   createdAt  DateTime    @default(now())
   updatedAt  DateTime    @updatedAt
}

model OrderItem {
   id        Int      @id @default(autoincrement())
   order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
   orderId   Int
   product   Product  @relation(fields: [productId], references: [id])
   productId Int
   quantity  Int
   price     Float
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
}